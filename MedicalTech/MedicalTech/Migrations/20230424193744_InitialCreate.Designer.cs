// <auto-generated />
using System;
using MedicalTech.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedicalTech.Migrations
{
    [DbContext(typeof(MedicalTechContext))]
    [Migration("20230424193744_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MedicalTech.Models.Enfermeiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cofen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstEnsFormacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Enfermeiro");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Cofen = "9871256",
                            Cpf = "573.053.080-30",
                            DataNascimento = new DateTime(1986, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstEnsFormacao = "PUC/PR",
                            NomeCompleto = "Thomaz Antunes",
                            Telefone = "4578945678"
                        },
                        new
                        {
                            Id = 4,
                            Cofen = "9873456",
                            Cpf = "024.306.570-15",
                            DataNascimento = new DateTime(1980, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InstEnsFormacao = "UniRitter",
                            NomeCompleto = "Tania Lozartana",
                            Telefone = "457898965"
                        });
                });

            modelBuilder.Entity("MedicalTech.Models.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Crm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("EspClinica")
                        .HasColumnType("int");

                    b.Property<string>("InstEnsinoForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusSistema")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalAtendimentos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cpf")
                        .IsUnique()
                        .HasFilter("[Cpf] IS NOT NULL");

                    b.ToTable("Medico");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "207.138.120-36",
                            Crm = "4887-RS",
                            DataNascimento = new DateTime(1990, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EspClinica = 3,
                            InstEnsinoForm = "Unisinos",
                            NomeCompleto = "Maria de Fatima",
                            StatusSistema = 1,
                            Telefone = "6126469720",
                            TotalAtendimentos = 10
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "918.293.130-53",
                            Crm = "9117-RS",
                            DataNascimento = new DateTime(1980, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EspClinica = 4,
                            InstEnsinoForm = "URGS/RS",
                            NomeCompleto = "Carlos Fontes",
                            StatusSistema = 0,
                            Telefone = "6126460098",
                            TotalAtendimentos = 34
                        });
                });

            modelBuilder.Entity("MedicalTech.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContadorTotalAtendimentos")
                        .HasColumnType("int");

                    b.Property<string>("ContatoDeEmergencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Convenio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("ListaCuidadosEspecificos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListaDeAlergias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusdeAtendimento")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Paciente");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            ContadorTotalAtendimentos = 15,
                            ContatoDeEmergencia = "67908765413",
                            Convenio = "UNIMED",
                            Cpf = "364.835.440-06",
                            DataNascimento = new DateTime(1960, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListaCuidadosEspecificos = "Deficiente Visual",
                            ListaDeAlergias = "Alergico a penicilina",
                            NomeCompleto = "Clovis Pinheiro",
                            StatusdeAtendimento = 1,
                            Telefone = "4578987654"
                        },
                        new
                        {
                            Id = 6,
                            ContadorTotalAtendimentos = 5,
                            ContatoDeEmergencia = "11999999999",
                            Convenio = "Bradesco Saúde",
                            Cpf = "768.168.230-95",
                            DataNascimento = new DateTime(1985, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListaCuidadosEspecificos = "Diabetes",
                            ListaDeAlergias = "Nenhuma",
                            NomeCompleto = "José da Silva",
                            StatusdeAtendimento = 0,
                            Telefone = "11987654321"
                        },
                        new
                        {
                            Id = 7,
                            ContadorTotalAtendimentos = 10,
                            ContatoDeEmergencia = "21999999999",
                            Convenio = "Amil",
                            Cpf = "015.128.240-46",
                            DataNascimento = new DateTime(1990, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListaCuidadosEspecificos = "Hipertensão",
                            ListaDeAlergias = "Alergica a camarão",
                            NomeCompleto = "Maria Oliveira",
                            StatusdeAtendimento = 1,
                            Telefone = "21987654321"
                        },
                        new
                        {
                            Id = 8,
                            ContadorTotalAtendimentos = 2,
                            ContatoDeEmergencia = "31999999999",
                            Convenio = "Unimed",
                            Cpf = "022.185.900-42",
                            DataNascimento = new DateTime(1978, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListaCuidadosEspecificos = "Asma",
                            ListaDeAlergias = "Alergico a amendoim",
                            NomeCompleto = "Pedro Santos",
                            StatusdeAtendimento = 3,
                            Telefone = "31987654321"
                        },
                        new
                        {
                            Id = 9,
                            ContadorTotalAtendimentos = 7,
                            ContatoDeEmergencia = "21999999999",
                            Convenio = "SulAmérica",
                            Cpf = "511.755.110-99",
                            DataNascimento = new DateTime(1982, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListaCuidadosEspecificos = "Ansiedade",
                            ListaDeAlergias = "Nenhuma",
                            NomeCompleto = "Ana Paula Fernandes",
                            StatusdeAtendimento = 1,
                            Telefone = "21987654321"
                        },
                        new
                        {
                            Id = 10,
                            ContadorTotalAtendimentos = 1,
                            ContatoDeEmergencia = "11999999999",
                            Convenio = "Bradesco Saúde",
                            Cpf = "966.931.580-80",
                            DataNascimento = new DateTime(1995, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListaCuidadosEspecificos = "Nenhuma",
                            ListaDeAlergias = "Alergico a poeira",
                            NomeCompleto = "Fernando Souza",
                            StatusdeAtendimento = 1,
                            Telefone = "11987654321"
                        },
                        new
                        {
                            Id = 11,
                            ContadorTotalAtendimentos = 3,
                            ContatoDeEmergencia = "11999999999",
                            Convenio = "Unimed",
                            Cpf = "002.958.820-00",
                            DataNascimento = new DateTime(1975, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListaCuidadosEspecificos = "Insuficiência renal|Cadeirante",
                            ListaDeAlergias = "Alergico a morango|Alergico Lactose",
                            NomeCompleto = "Luiz Carlos Rodrigues",
                            StatusdeAtendimento = 0,
                            Telefone = "11987654321"
                        },
                        new
                        {
                            Id = 12,
                            ContadorTotalAtendimentos = 0,
                            ContatoDeEmergencia = "21999999999",
                            Convenio = "Amil",
                            Cpf = "631.192.340-87",
                            DataNascimento = new DateTime(2000, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListaCuidadosEspecificos = "Nenhuma",
                            ListaDeAlergias = "Nenhuma",
                            NomeCompleto = "Larissa Silva",
                            StatusdeAtendimento = 2,
                            Telefone = "21987654321"
                        },
                        new
                        {
                            Id = 13,
                            ContadorTotalAtendimentos = 4,
                            ContatoDeEmergencia = "11999999999",
                            Convenio = "SulAmérica",
                            Cpf = "629.783.790-22",
                            DataNascimento = new DateTime(1989, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListaCuidadosEspecificos = "Nenhuma",
                            ListaDeAlergias = "Alergico a penicilina",
                            NomeCompleto = "Renato Souza",
                            StatusdeAtendimento = 2,
                            Telefone = "51995783456"
                        },
                        new
                        {
                            Id = 14,
                            ContadorTotalAtendimentos = 2,
                            ContatoDeEmergencia = "11999999999",
                            Convenio = "Unimed",
                            Cpf = "492.470.580-23",
                            DataNascimento = new DateTime(1995, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ListaCuidadosEspecificos = "Cuidados com pressão alta",
                            ListaDeAlergias = "Não tem",
                            NomeCompleto = "Ana Silva",
                            StatusdeAtendimento = 0,
                            Telefone = "11987651234"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
